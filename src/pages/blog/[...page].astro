---
import BaseLayout from "@layouts/BaseLayout.astro";
import HorizontalCard from "@components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug";

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("blog");
  posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
---

<BaseLayout title="Blog" sideBarActiveItemID="blog">
  <div class="relative p-6 mx-auto lg:max-w-[1000px] max-w-[100vw]">
    <div>
      <div
        class="text-4xl sm:text-5xl leading-[3rem] sm:leading-[4rem] w-full font-hero text-gradient text-stroke italic"
      >
        Blog
      </div>
      <div class="divider-gradient"></div>
    </div>

    <ul>
      {
        page.data.map((post) => (
          <>
            <HorizontalCard
              title={post.data.title}
              date={post.data.pubDate}
              img={post.data.heroImage}
              desc={post.data.description}
              url={"/blog/" + createSlug(post.data.title, post.slug)}
              target="_self"
            />
            <div class="divider my-3 last:hidden" />
          </>
        ))
      }
    </ul>
  </div>
</BaseLayout>

<style>
  @keyframes textColor {
    0% {
      background-position: left;
    }
    100% {
      background-position: right;
    }
  }

  .text-gradient {
    background-image: linear-gradient(
      45deg,
      oklch(var(--p)),
      oklch(var(--s)),
      oklch(var(--a))
    );
    background-clip: text;
    color: transparent;
    background-size: 400%;
    animation: textColor 20s infinite alternate;
  }

  .divider-gradient {
    text-align: center;
    margin: 1.5rem auto;
    height: 1px;
    width: 100%;
    background-image: linear-gradient(
      45deg,
      oklch(var(--p)),
      oklch(var(--s)),
      oklch(var(--a))
    );
    background-size: 400%;
    animation: textColor 20s infinite alternate;
  }
</style>
